{"name": "Рейтинг книги - валидный", "status": "failed", "statusDetails": {"message": "AssertionError: Expected rating 4.5, but got 4.56\nassert 4.56 == 4.5", "trace": "@allure.feature(\"Рейтинг книги\")\n    @allure.story(\"Позитивные проверки\")\n    @allure.title(\"Рейтинг книги - валидный\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_valid_book_rating():\n        # URL и заголовки\n        base_url = \"https://web-gate.chitai-gorod.ru/api/v1/rating/3029576\"\n        headers = {\n            \"accept\": \"application/json, text/plain, */*\",\n            \"accept-language\": \"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\",\n            \"authorization\": f\"Bearer {access_token}\",\n            \"content-type\": \"application/json\",\n            \"cache-control\": \"no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0\",\n            \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\"\n        }\n    \n        # Тело запроса на рейтинг книги\n        payload = {\n            \"rating\": 5\n        }\n    \n        # Шаг 1: Отправка запроса на установку рейтинга книги\n        response = requests.put(base_url, headers=headers, json=payload)\n    \n        print(f\"Response status code: {response.status_code}\")\n        print(f\"Response headers: {response.headers}\")\n        print(f\"Response content: {response.text}\")\n    \n        assert response.status_code == 200, f\"Expected status code 200, but got {response.status_code}\"\n    \n        # Шаг 2: Проверка данных о рейтинге книги\n        response_data = response.json()\n        assert \"data\" in response_data, \"Response JSON does not contain 'data'\"\n        data = response_data[\"data\"]\n    \n        expected_rating = 4.5  # Обновлено в соответствии с фактическим значением\n        expected_count = 8  # Обновлено в соответствии с фактическим значением\n    \n>       assert data[\"rating\"] == expected_rating, f\"Expected rating {expected_rating}, but got {data['rating']}\"\nE       AssertionError: Expected rating 4.5, but got 4.56\nE       assert 4.56 == 4.5\n\nautotests\\api_test.py:524: AssertionError"}, "attachments": [{"name": "stdout", "source": "497feb13-ffb4-4e4a-9103-0e897415209d-attachment.txt", "type": "text/plain"}], "start": 1722191612388, "stop": 1722191612509, "uuid": "a456d024-b52f-4032-842a-ae799f5a5920", "historyId": "4a1bfb18457309c8b899cad0edeb5e55", "testCaseId": "4a1bfb18457309c8b899cad0edeb5e55", "fullName": "autotests.api_test#test_valid_book_rating", "labels": [{"name": "feature", "value": "Рейтинг книги"}, {"name": "story", "value": "Позитивные проверки"}, {"name": "severity", "value": "critical"}, {"name": "parentSuite", "value": "autotests"}, {"name": "suite", "value": "api_test"}, {"name": "host", "value": "DESKTOP-5RU07EA"}, {"name": "thread", "value": "12220-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "autotests.api_test"}]}